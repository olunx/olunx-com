/*
 * JOnlineInstaller.java
 *
 * Created on June 22, 2008, 5:56 PM
 */
package com.teesoft.javadict;

import com.teesoft.jfile.FileAccessBase;
import com.teesoft.jfile.FileFactory;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  wind
 */
public class JOnlineInstaller extends javax.swing.JDialog {

    private Hashtable dictSet;

    /** Creates new form JOnlineInstaller */
    public JOnlineInstaller(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //cboDictSets
        DictSetInfos.setListner(new OnlineListener() {

            public boolean startLoading(String file) {
                txtLog.append("Start loading " + file + "\n");
                return true;
            }

            public boolean endLoading(String file) {
                txtLog.append("End loading " + file + "\n");
                return true;
            }

            public boolean onException(String file, Exception ex) {
                txtLog.append("On Exception for file:" + file + "\n" + ex.getMessage() + "\n");
                return true;
            }

            public boolean loading(String file, long loaded, long size) {
                txtLog.append("loading " + file + "  " + loaded + " of " + size + "\n");
                return true;
            }
        });
        Hashtable sets = DictSetInfos.getSets();
        cboDictSets.setModel(new javax.swing.DefaultComboBoxModel(sets.keySet().toArray()));
        refreshDictSet(cboDictSets.getSelectedItem());
    }

    protected void refreshDict(Object item) {
        if (dictSet != null) {
            DictInfo dict = (DictInfo) dictSet.get(item);
            this.txtDesc.setText("Name:\n\t" + dict.name + "\nDesc:\n\t" + dict.desc + "\nFile:\n\t" + dict.file);
        }
    }

    protected void refreshDictSet(Object item) {
        DictSetInfo info = (DictSetInfo) DictSetInfos.getSets().get(item);
        dictSet = DictSetInfos.getDicts(info.key);
        cboDicts.setModel(new javax.swing.DefaultComboBoxModel(dictSet.keySet().toArray()));
        refreshDict(cboDicts.getSelectedItem());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jLabel1 = new javax.swing.JLabel();
                cboDictSets = new javax.swing.JComboBox();
                jLabel2 = new javax.swing.JLabel();
                cboDicts = new javax.swing.JComboBox();
                jLabel3 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                txtDesc = new javax.swing.JTextArea();
                btnInstall = new javax.swing.JButton();
                jScrollPane2 = new javax.swing.JScrollPane();
                txtLog = new javax.swing.JTextArea();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

                jLabel1.setText("Dict Set");

                cboDictSets.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                cboDictSets.addItemListener(new java.awt.event.ItemListener() {
                        public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cboDictSetsItemStateChanged(evt);
                        }
                });

                jLabel2.setText("Dict");

                cboDicts.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                cboDicts.addItemListener(new java.awt.event.ItemListener() {
                        public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                cboDictsItemStateChanged(evt);
                        }
                });

                jLabel3.setText("Desc");

                txtDesc.setColumns(20);
                txtDesc.setRows(5);
                jScrollPane1.setViewportView(txtDesc);

                btnInstall.setText("Install");
                btnInstall.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnInstallActionPerformed(evt);
                        }
                });

                txtLog.setColumns(20);
                txtLog.setRows(5);
                jScrollPane2.setViewportView(txtLog);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnInstall)
                                                .addContainerGap())
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                                                                .addContainerGap())
                                                        .addComponent(cboDicts, 0, 452, Short.MAX_VALUE)
                                                        .addComponent(cboDictSets, 0, 452, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                                                                .addContainerGap())))))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(cboDictSets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(cboDicts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel3))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInstall)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                .addContainerGap())
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

private void cboDictSetsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDictSetsItemStateChanged
    DictSetInfo info;
    if (evt.getStateChange() == ItemEvent.SELECTED) {
        refreshDictSet(evt.getItem());
    }

}//GEN-LAST:event_cboDictSetsItemStateChanged

private void cboDictsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDictsItemStateChanged
    if (evt.getStateChange() == ItemEvent.SELECTED) {
        refreshDict(evt.getItem());
    }
}//GEN-LAST:event_cboDictsItemStateChanged

private void btnInstallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInstallActionPerformed
    new Thread(new Runnable() {

        public void run() {
            btnInstall.setEnabled(false);
            DictInfo dict = (DictInfo) dictSet.get(cboDicts.getSelectedItem());
            FileAccessBase dir;
            try {
                String folder = DictSetInfos.getDictFiles(FileFactory.getApplicationFolder() + "dict/", dict.file);
                dir = FileFactory.openFileAccess(folder, true);
                if (dir != null) {
                    Dict dic = DictManager.getInstance().discoverFile(dir, null);
                    if (dic != null) {
                        DictManager.getInstance().addDict(dic, false);
                        txtLog.append(dic.getName() + " Installed\n");
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(JOnlineInstaller.class.getName()).log(Level.SEVERE, null, ex);
            }
            btnInstall.setEnabled(true);
        }
    }).start();


}//GEN-LAST:event_btnInstallActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JOnlineInstaller dialog = new JOnlineInstaller(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnInstall;
        private javax.swing.JComboBox cboDictSets;
        private javax.swing.JComboBox cboDicts;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JTextArea txtDesc;
        private javax.swing.JTextArea txtLog;
        // End of variables declaration//GEN-END:variables

}
