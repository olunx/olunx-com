/*
 * newDicts.java
 *
 * Created on 2007-9-1, 9:07 PM
teedict , to be the best dictionary application for java me enabled devices.
Copyright (C) 2006,2007  Yong Li. All rights reserved.
 
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>. 
 */

package com.teesoft.javadict;

import com.teesoft.javadict.jDictManager.DictTableModel;
import java.awt.Dimension;
import java.awt.Rectangle;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;

/**
 *
 * @author  wind
 */
public class newDicts extends javax.swing.JDialog {
    private jDictManager managerDialog;
    private DictManager dictManager;
    

    public newDicts(jDictManager parent, boolean modal,DictManager dictManager) {
        super(parent, modal);
        managerDialog = parent;
        this.dictManager = dictManager;
        init(dictManager);
    }

    void init(DictManager dictManager)
    {
        initComponents();
        model = new jDictManager.DictTableModel(dictManager);
        tblList.setModel(model);
        tblList.setDefaultEditor(DictFactory.class,new DefaultCellEditor(jDictManager.getDictFormats()));
        
        if (dictManager!=null)
        {
            for(int i=0;i<dictManager.size();++i)
            if(dictManager.getDict(i).getFile()!=null && dictManager.getDict(i).getFile().isUseTempFile())
            {
                this.chkCopyTo.setSelected(true);
                break;
            }
        }
        centerScreen();        
        cboCopyTo.setSelectedIndex(1);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        panList = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        chkCopyTo = new javax.swing.JCheckBox();
        cboCopyTo = new javax.swing.JComboBox();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        panList.setViewportView(tblList);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/teesoft/javadict/resources/JavaDict"); // NOI18N
        chkCopyTo.setText(bundle.getString("newDicts.chkCopyTo.text")); // NOI18N
        chkCopyTo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkCopyTo.setMargin(new java.awt.Insets(0, 0, 0, 0));

        cboCopyTo.setModel(getCopyOptions());

        btnOK.setText(bundle.getString("newDicts.btnOK.text")); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText(bundle.getString("newDicts.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(chkCopyTo)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cboCopyTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 164, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 328, Short.MAX_VALUE)
                .add(btnOK)
                .add(14, 14, 14)
                .add(btnCancel)
                .addContainerGap())
            .add(panList, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(panList, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(chkCopyTo)
                            .add(cboCopyTo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(34, 34, 34))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(btnOK)
                            .add(btnCancel))
                        .addContainerGap())))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.OK = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    
    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        this.OK = true;
        if (chkCopyTo.isSelected()) {
            copyType = cboCopyTo.getSelectedIndex()+1;
        } else
            copyType = NOCOPY;
        
        managerDialog.doAddDicts(this, this.dictManager);
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed
    
    
    public void centerScreen() {
        Dimension dim = getToolkit().getScreenSize();
        Rectangle abounds = getBounds();
        setLocation((dim.width - abounds.width) / 2,
            (dim.height - abounds.height) / 2);
        requestFocus();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cboCopyTo;
    private javax.swing.JCheckBox chkCopyTo;
    private javax.swing.JScrollPane panList;
    private javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables
    
    private DictTableModel model;
    private boolean OK=false;
    private int copyType=0;
    
    public static int NOCOPY=0;
    public static int COPY_TO_ALL=1;
    public static int COPY_TO_CURRENT=2;
    public boolean isOK()
    {
        return OK;
    }
    public int getCopyType()
    {
        return copyType;
    }
    static java.util.ResourceBundle theBundle = java.util.ResourceBundle.getBundle("com/teesoft/javadict/resources/JavaDict"); // NOI18N
    
    public DefaultComboBoxModel getCopyOptions()
    {
        return new javax.swing.DefaultComboBoxModel(new String[] { theBundle.getString("AllUsers"),theBundle.getString("CurrentUsers")});
    }
}
